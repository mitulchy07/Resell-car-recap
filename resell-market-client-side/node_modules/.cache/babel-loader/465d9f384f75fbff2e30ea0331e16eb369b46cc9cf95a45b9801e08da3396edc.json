{"ast":null,"code":"var _jsxFileName = \"/Users/mitul/Projects with Jhankar Mahmud/ResellMarketRecap/resell-market-client-side/src/Pages/Blog/Blog.js\";\nimport React from 'react';\nimport './Blog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blog = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"justify-center grid  my-5 gap-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-full bg-primary text-primary-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: [' ', \"What are the different ways to manage a state in a React application?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"There are four main types of state you need to properly manage in your React apps:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Local state\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Global state\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Server state\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"URL state\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-full bg-primary text-primary-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"How does prototypical inheritance work?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The Prototypal Inheritance is a feature in javascript used to add methods and properties in objects. It is a method by which an object can inherit the properties and methods of another object. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 71\n          }, this), \"Traditionally, in order to get and set the Prototype of an object, we use Object. getPrototypeOf and Object.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-full bg-primary text-primary-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"What is a unit test? Why should we write unit tests?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The main objective of unit testing is to isolate written code to test and determine if it works as intended. Unit testing is an important step in the development process, because if done correctly, \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 24\n          }, this), \" it can help detect early flaws in code which may be more difficult to find in later testing stages.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-full bg-primary text-primary-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"React vs. Angular vs. Vue?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Vue provides higher customizability and hence is easier to learn than Angular or React. Further, Vue has an overlap with Angular and React with respect to their functionality like the use of components. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), \" Hence, the transition to Vue from either of the two is an easy option.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","Blog"],"sources":["/Users/mitul/Projects with Jhankar Mahmud/ResellMarketRecap/resell-market-client-side/src/Pages/Blog/Blog.js"],"sourcesContent":["import React from 'react';\nimport './Blog.css';\n\nconst Blog = () => {\n  return (\n    <div className='justify-center grid  my-5 gap-5'>\n      <div className='card w-full bg-primary text-primary-content'>\n        <div className='card-body'>\n          <h2 className='card-title'>\n            {' '}\n            What are the different ways to manage a state in a React\n            application?\n          </h2>\n          <p>\n            <ul>\n              <h1>\n                There are four main types of state you need to properly manage\n                in your React apps:\n              </h1>\n              <li>Local state</li>\n              <li>Global state</li>\n              <li>Server state</li>\n              <li>URL state</li>\n            </ul>\n          </p>\n        </div>\n      </div>\n      <div className='card w-full bg-primary text-primary-content'>\n        <div className='card-body'>\n          <h2 className='card-title'>\n            How does prototypical inheritance work?\n          </h2>\n          <p>\n            The Prototypal Inheritance is a feature in javascript used to add\n            methods and properties in objects. It is a method by which an object\n            can inherit the properties and methods of another object. <br />\n            Traditionally, in order to get and set the Prototype of an object,\n            we use Object. getPrototypeOf and Object.\n          </p>\n        </div>\n      </div>\n      <div className='card w-full bg-primary text-primary-content'>\n        <div className='card-body'>\n          <h2 className='card-title'>\n            What is a unit test? Why should we write unit tests?\n          </h2>\n          <p>\n            The main objective of unit testing is to isolate written code to\n            test and determine if it works as intended. Unit testing is an\n            important step in the development process, because if done\n            correctly, <br /> it can help detect early flaws in code which may\n            be more difficult to find in later testing stages.\n          </p>\n        </div>\n      </div>\n      <div className='card w-full bg-primary text-primary-content'>\n        <div className='card-body'>\n          <h2 className='card-title'>React vs. Angular vs. Vue?</h2>\n          <p>\n            Vue provides higher customizability and hence is easier to learn\n            than Angular or React. Further, Vue has an overlap with Angular and\n            React with respect to their functionality like the use of\n            components. <br /> Hence, the transition to Vue from either of the\n            two is an easy option.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Blog;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC;AAEpB,MAAMC,IAAI,GAAG,MAAM;EACjB,oBACE;IAAK,SAAS,EAAC,iCAAiC;IAAA,wBAC9C;MAAK,SAAS,EAAC,6CAA6C;MAAA,uBAC1D;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAI,SAAS,EAAC,YAAY;UAAA,WACvB,GAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAGD,eACL;UAAA,uBACE;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAGK,eACL;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAoB,eACpB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAqB,eACrB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAqB,eACrB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAkB;UAAA;YAAA;YAAA;YAAA;UAAA;QACf;UAAA;UAAA;UAAA;QAAA,QACH;MAAA;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,6CAA6C;MAAA,uBAC1D;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAI,SAAS,EAAC,YAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAErB,eACL;UAAA,6NAG4D;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QAG9D;MAAA;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,6CAA6C;MAAA,uBAC1D;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAI,SAAS,EAAC,YAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAErB,eACL;UAAA,kOAIa;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QAEf;MAAA;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,6CAA6C;MAAA,uBAC1D;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAI,SAAS,EAAC,YAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgC,eAC1D;UAAA,uOAIc;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QAEhB;MAAA;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KAlEIA,IAAI;AAoEV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}